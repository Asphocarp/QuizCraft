plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://maven.terraformersmc.com/releases/' }
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "quiz_craft" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

project.ext.jomlVersion = "1.10.5"

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // new
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "org.joml:joml:${jomlVersion}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${cloth_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Uncomment the following line to enable the deprecated Fabric API modules.
    // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

    // modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Configure the Java toolchain for Loom
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }

    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

modrinth {
//	token = 'secret' // Please use an environment variable for this! The default is `$MODRINTH_TOKEN`.
//	versionNumber = '1.0.0' // The (preferably SemVer) version of the mod. If not specified, it'll use the `version` declaration
//	versionName = 'My awesome release' // The version title. If not specified, it'll use the version number
    projectId = 'RECCOz9u' // The ID of your Modrinth project. Slugs will not work.
	uploadFile = remapJar // Tells Minotaur to use the remapped jar
	gameVersions = ['1.20.1'] // An array of game versions the version supports
	loaders = ['fabric'] // Self-explanatory.
	dependencies = [
			new com.modrinth.minotaur.dependencies.ModDependency('P7dR8mSH', 'required') // Creates a new required dependency on Fabric API
	]
}